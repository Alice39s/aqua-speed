permissions:
    contents: write
    packages: write
    actions: read

on:
    push:
        branches:
            - main
        paths:
            - "package.json"
            - "src/**"
            - ".github/**"

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get_version.outputs.VERSION }}

        steps:
            - uses: actions/checkout@v4
            - uses: oven-sh/setup-bun@v2.0.1
              with:
                  bun-version: latest

            - name: Extract version number
              id: get_version
              shell: bash
              run: |
                  VERSION=$(jq -r .version < package.json)
                  echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

            - name: Update System
              run: |
                  sudo apt-get update -y
                  sudo apt-get install -y --only-upgrade tar

            - name: Run build script
              run: |
                  chmod +x ./build.sh
                  ./build.sh

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: dist/out/*
                  retention-days: 1

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-artifacts
                  path: /tmp/release/

            - name: Get Previous Version
              id: get_prev_version
              uses: actions/github-script@v7
              with:
                  script: |
                      const releases = await github.rest.repos.listReleases({
                        owner: context.repo.owner,
                        repo: context.repo.repo
                      });

                      const currentVersion = '${{ needs.build.outputs.version }}';
                      console.log(`Releases: ${context.repo.owner}/${context.repo.repo}`, releases.data.map(r => r.tag_name));
                      console.log(`Creating version: v${currentVersion}`);

                      if (releases.data.length === 0) {
                        core.setOutput('version', 'first-commit');
                        core.setOutput('compare_url', `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/commits`);
                        core.setOutput('changes_text', 'all commits');
                      } else {
                        const previousRelease = releases.data[0];
                        const previousTag = previousRelease.tag_name;
                        const previousVersion = previousTag.replace('v', '');
                        console.log(`Previous version: ${previousTag}`);
                        core.setOutput('version', previousVersion);
                        core.setOutput('compare_url', 
                          `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/compare/v${previousVersion}...v${currentVersion}`
                        );
                        core.setOutput('changes_text', `changes since v${previousVersion}`);
                      }

            - name: Create GitHub Release
              uses: ncipollo/release-action@v1
              with:
                  artifacts: |
                      /tmp/release/*.tar.xz
                      /tmp/release/*.zip
                      /tmp/release/checksums.txt
                  token: ${{ github.token }}
                  tag: v${{ needs.build.outputs.version }}
                  name: Release ${{ needs.build.outputs.version }}
                  body: |
                      Release of version ${{ needs.build.outputs.version }}

                      [View ${{ steps.get_prev_version.outputs.changes_text }}](${{ steps.get_prev_version.outputs.compare_url }})
                  draft: false
                  prerelease: false
                  allowUpdates: true
                  generateReleaseNotes: true
